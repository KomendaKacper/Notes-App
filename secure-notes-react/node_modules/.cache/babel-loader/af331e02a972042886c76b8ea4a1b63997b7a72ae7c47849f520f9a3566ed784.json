{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fujitsu\\\\Desktop\\\\Notes-App\\\\secure-notes-react\\\\src\\\\store\\\\ContextApi.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from \"react\";\nimport { useEffect } from \"react\";\nimport api from \"../services/api\";\nimport toast from \"react-hot-toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContextApi = /*#__PURE__*/createContext();\nexport const ContextProvider = ({\n  children\n}) => {\n  _s();\n  //find the token in the localstorage\n  const getToken = localStorage.getItem(\"JWT_TOKEN\") ? JSON.stringify(localStorage.getItem(\"JWT_TOKEN\")) : null;\n  //find is the user status from the localstorage\n  const isADmin = localStorage.getItem(\"IS_ADMIN\") ? JSON.stringify(localStorage.getItem(\"IS_ADMIN\")) : false;\n\n  //store the token\n  const [token, setToken] = useState(getToken);\n\n  //store the current loggedin user\n  const [currentUser, setCurrentUser] = useState(null);\n  //handle sidebar opening and closing in the admin panel\n  const [openSidebar, setOpenSidebar] = useState(true);\n  //check the loggedin user is admin or not\n  const [isAdmin, setIsAdmin] = useState(isADmin);\n  const fetchUser = async () => {\n    const user = JSON.parse(localStorage.getItem(\"USER\"));\n    if (user !== null && user !== void 0 && user.username) {\n      try {\n        const {\n          data\n        } = await api.get(`/auth/user`);\n        const roles = data.roles;\n        if (roles.includes(\"ROLE_ADMIN\")) {\n          localStorage.setItem(\"IS_ADMIN\", JSON.stringify(true));\n          setIsAdmin(true);\n        } else {\n          localStorage.removeItem(\"IS_ADMIN\");\n          setIsAdmin(false);\n        }\n        setCurrentUser(data);\n      } catch (error) {\n        console.error(\"Error fetching current user\", error);\n        toast.error(\"Error fetching current user\");\n      }\n    }\n  };\n\n  //if  token exist fetch the current user\n  useEffect(() => {\n    if (token) {\n      fetchUser();\n    }\n  }, [token]);\n\n  //through context provider you are sending all the datas so that we access at anywhere in your application\n  return /*#__PURE__*/_jsxDEV(ContextApi.Provider, {\n    value: {\n      token,\n      setToken,\n      currentUser,\n      setCurrentUser,\n      openSidebar,\n      setOpenSidebar,\n      isAdmin,\n      setIsAdmin\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n//by using this (useMyContext) custom hook we can reach our context provier and access the datas across our components\n_s(ContextProvider, \"cL5xmCUE7p+5MWj/LiMfeMtOGRA=\");\n_c = ContextProvider;\nexport const useMyContext = () => {\n  _s2();\n  const context = useContext(ContextApi);\n  return context;\n};\n_s2(useMyContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","toast","jsxDEV","_jsxDEV","ContextApi","ContextProvider","children","_s","getToken","localStorage","getItem","JSON","stringify","isADmin","token","setToken","currentUser","setCurrentUser","openSidebar","setOpenSidebar","isAdmin","setIsAdmin","fetchUser","user","parse","username","data","get","roles","includes","setItem","removeItem","error","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useMyContext","_s2","context","$RefreshReg$"],"sources":["C:/Users/Fujitsu/Desktop/Notes-App/secure-notes-react/src/store/ContextApi.js"],"sourcesContent":["import React, { createContext, useContext, useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport api from \"../services/api\";\r\nimport toast from \"react-hot-toast\";\r\n\r\nconst ContextApi = createContext();\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n  //find the token in the localstorage\r\n  const getToken = localStorage.getItem(\"JWT_TOKEN\")\r\n    ? JSON.stringify(localStorage.getItem(\"JWT_TOKEN\"))\r\n    : null;\r\n  //find is the user status from the localstorage\r\n  const isADmin = localStorage.getItem(\"IS_ADMIN\")\r\n    ? JSON.stringify(localStorage.getItem(\"IS_ADMIN\"))\r\n    : false;\r\n\r\n  //store the token\r\n  const [token, setToken] = useState(getToken);\r\n\r\n  //store the current loggedin user\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  //handle sidebar opening and closing in the admin panel\r\n  const [openSidebar, setOpenSidebar] = useState(true);\r\n  //check the loggedin user is admin or not\r\n  const [isAdmin, setIsAdmin] = useState(isADmin);\r\n\r\n  const fetchUser = async () => {\r\n    const user = JSON.parse(localStorage.getItem(\"USER\"));\r\n\r\n    if (user?.username) {\r\n      try {\r\n        const { data } = await api.get(`/auth/user`);\r\n        const roles = data.roles;\r\n\r\n        if (roles.includes(\"ROLE_ADMIN\")) {\r\n          localStorage.setItem(\"IS_ADMIN\", JSON.stringify(true));\r\n          setIsAdmin(true);\r\n        } else {\r\n          localStorage.removeItem(\"IS_ADMIN\");\r\n          setIsAdmin(false);\r\n        }\r\n        setCurrentUser(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching current user\", error);\r\n        toast.error(\"Error fetching current user\");\r\n      }\r\n    }\r\n  };\r\n\r\n  //if  token exist fetch the current user\r\n  useEffect(() => {\r\n    if (token) {\r\n      fetchUser();\r\n    }\r\n  }, [token]);\r\n\r\n  //through context provider you are sending all the datas so that we access at anywhere in your application\r\n  return (\r\n    <ContextApi.Provider\r\n      value={{\r\n        token,\r\n        setToken,\r\n        currentUser,\r\n        setCurrentUser,\r\n        openSidebar,\r\n        setOpenSidebar,\r\n        isAdmin,\r\n        setIsAdmin,\r\n      }}\r\n    >\r\n      {children}\r\n    </ContextApi.Provider>\r\n  );\r\n};\r\n\r\n//by using this (useMyContext) custom hook we can reach our context provier and access the datas across our components\r\nexport const useMyContext = () => {\r\n  const context = useContext(ContextApi);\r\n\r\n  return context;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}