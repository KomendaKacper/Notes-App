{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fujitsu\\\\Desktop\\\\Notes-App\\\\secure-notes-react\\\\src\\\\components\\\\Auth\\\\ForgotPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport api from \"../../services/api\";\nimport { useForm } from \"react-hook-form\";\nimport InputField from \"../InputField/InputField\";\nimport Buttons from \"../../utils/Buttons\";\nimport { Divider } from \"@mui/material\";\nimport toast from \"react-hot-toast\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useMyContext } from \"../../store/ContextApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  // Access the token  using the useMyContext hook from the ContextProvider\n  const {\n    token\n  } = useMyContext();\n\n  //react hook form initialization\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      email: \"\"\n    },\n    mode: \"onTouched\"\n  });\n  const onPasswordForgotHandler = async data => {\n    //destructuring email from the data object\n    const {\n      email\n    } = data;\n    try {\n      setLoading(true);\n      const formData = new URLSearchParams();\n      formData.append(\"email\", email);\n      await api.post(\"/auth/public/forgot-password\", formData, {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        }\n      });\n\n      //reset the field by using reset() function provided by react hook form after submit\n      reset();\n\n      //showing success message\n      toast.success(\"Password reset email sent! Check your inbox.\");\n    } catch (error) {\n      toast.error(\"Error sending password reset email. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  //if there is token  exist navigate  the user to the home page if he tried to access the login page\n  useEffect(() => {\n    if (token) navigate(\"/\");\n  }, [token, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-[calc(100vh-74px)] flex justify-center items-center\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onPasswordForgotHandler),\n      className: \"sm:w-[450px] w-[360px]  shadow-custom py-8 sm:px-8 px-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"font-montserrat text-center font-bold text-2xl\",\n          children: \"Forgot Password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-slate-600 text-center\",\n          children: \"Enter your email a Password reset email will sent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        className: \"font-semibold pb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col gap-2 mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(InputField, {\n          label: \"Email\",\n          required: true,\n          id: \"email\",\n          type: \"email\",\n          message: \"*Email is required\",\n          placeholder: \"enter your email\",\n          register: register,\n          errors: errors\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n        disabled: loading,\n        onClickhandler: () => {},\n        className: \"bg-customRed font-semibold text-white w-full py-2 hover:text-slate-400 transition-colors duration-100 rounded-sm my-3\",\n        type: \"text\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 22\n        }, this) : \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \" text-sm text-slate-700 \",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \" underline hover:text-black\",\n          to: \"/login\",\n          children: \"Back To Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPassword, \"C5He/K2Muzuz7hKjUGiDgzEco98=\", false, function () {\n  return [useNavigate, useMyContext, useForm];\n});\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","api","useForm","InputField","Buttons","Divider","toast","Link","useNavigate","useEffect","useMyContext","jsxDEV","_jsxDEV","ForgotPassword","_s","loading","setLoading","navigate","token","register","handleSubmit","reset","formState","errors","defaultValues","email","mode","onPasswordForgotHandler","data","formData","URLSearchParams","append","post","headers","success","error","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","label","required","id","type","message","placeholder","disabled","onClickhandler","to","_c","$RefreshReg$"],"sources":["C:/Users/Fujitsu/Desktop/Notes-App/secure-notes-react/src/components/Auth/ForgotPassword.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport api from \"../../services/api\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport InputField from \"../InputField/InputField\";\r\nimport Buttons from \"../../utils/Buttons\";\r\nimport { Divider } from \"@mui/material\";\r\nimport toast from \"react-hot-toast\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { useMyContext } from \"../../store/ContextApi\";\r\n\r\nconst ForgotPassword = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n  // Access the token  using the useMyContext hook from the ContextProvider\r\n  const { token } = useMyContext();\r\n\r\n  //react hook form initialization\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm({\r\n    defaultValues: {\r\n      email: \"\",\r\n    },\r\n    mode: \"onTouched\",\r\n  });\r\n\r\n  const onPasswordForgotHandler = async (data) => {\r\n    //destructuring email from the data object\r\n    const { email } = data;\r\n\r\n    try {\r\n      setLoading(true);\r\n\r\n      const formData = new URLSearchParams();\r\n      formData.append(\"email\", email);\r\n      await api.post(\"/auth/public/forgot-password\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        },\r\n      });\r\n\r\n      //reset the field by using reset() function provided by react hook form after submit\r\n      reset();\r\n\r\n      //showing success message\r\n      toast.success(\"Password reset email sent! Check your inbox.\");\r\n    } catch (error) {\r\n      toast.error(\"Error sending password reset email. Please try again.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  //if there is token  exist navigate  the user to the home page if he tried to access the login page\r\n  useEffect(() => {\r\n    if (token) navigate(\"/\");\r\n  }, [token, navigate]);\r\n\r\n  return (\r\n    <div className=\"min-h-[calc(100vh-74px)] flex justify-center items-center\">\r\n      <form\r\n        onSubmit={handleSubmit(onPasswordForgotHandler)}\r\n        className=\"sm:w-[450px] w-[360px]  shadow-custom py-8 sm:px-8 px-4\"\r\n      >\r\n        <div>\r\n          <h1 className=\"font-montserrat text-center font-bold text-2xl\">\r\n            Forgot Password?\r\n          </h1>\r\n          <p className=\"text-slate-600 text-center\">\r\n            Enter your email a Password reset email will sent\r\n          </p>\r\n        </div>\r\n        <Divider className=\"font-semibold pb-4\"></Divider>\r\n\r\n        <div className=\"flex flex-col gap-2 mt-4\">\r\n          <InputField\r\n            label=\"Email\"\r\n            required\r\n            id=\"email\"\r\n            type=\"email\"\r\n            message=\"*Email is required\"\r\n            placeholder=\"enter your email\"\r\n            register={register}\r\n            errors={errors}\r\n          />{\" \"}\r\n        </div>\r\n        <Buttons\r\n          disabled={loading}\r\n          onClickhandler={() => {}}\r\n          className=\"bg-customRed font-semibold text-white w-full py-2 hover:text-slate-400 transition-colors duration-100 rounded-sm my-3\"\r\n          type=\"text\"\r\n        >\r\n          {loading ? <span>Loading...</span> : \"Send\"}\r\n        </Buttons>\r\n        <p className=\" text-sm text-slate-700 \">\r\n          <Link className=\" underline hover:text-black\" to=\"/login\">\r\n            Back To Login\r\n          </Link>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}