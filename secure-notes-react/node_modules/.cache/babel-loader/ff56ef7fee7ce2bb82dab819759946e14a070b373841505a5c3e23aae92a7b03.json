{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fujitsu\\\\Desktop\\\\Notes-App\\\\secure-notes-react\\\\src\\\\components\\\\Auth\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link, useSearchParams } from \"react-router-dom\";\nimport api from \"../../services/api\";\nimport { useForm } from \"react-hook-form\";\nimport { Divider } from \"@mui/material\";\nimport InputField from \"../InputField/InputField\";\nimport toast from \"react-hot-toast\";\nimport Buttons from \"../../utils/Buttons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      email: \"\"\n    },\n    mode: \"onTouched\"\n  });\n  const [loading, setLoading] = useState(false);\n  const [searchParams] = useSearchParams();\n  const handleResetPassword = async data => {\n    const {\n      password\n    } = data;\n    const token = searchParams.get(\"token\");\n    setLoading(true);\n    try {\n      const formData = new URLSearchParams();\n      formData.append(\"token\", token);\n      formData.append(\"newPassword\", password);\n      await api.post(\"/auth/public/reset-password\", formData, {\n        headers: {\n          \"Content-Type\": \"application/x-www-form-urlencoded\"\n        }\n      });\n      toast.success(\"Password reset successful! You can now log in.\");\n      reset();\n    } catch (error) {\n      toast.error(\"Error resetting password. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-[calc(100vh-74px)] flex justify-center items-center\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(handleResetPassword),\n      className: \"sm:w-[450px] w-[360px]  shadow-custom py-8 sm:px-8 px-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"font-montserrat text-center font-bold text-2xl\",\n          children: \"Update Your Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-slate-600 text-center\",\n          children: \"Enter your new Password to Update it\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        className: \"font-semibold pb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col gap-2 mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(InputField, {\n          label: \"Password\",\n          required: true,\n          id: \"password\",\n          type: \"password\",\n          message: \"*Password is required\",\n          placeholder: \"enter your Password\",\n          register: register,\n          errors: errors,\n          min: 6\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n        disabled: loading,\n        onClickhandler: () => {},\n        className: \"bg-customRed font-semibold text-white w-full py-2 hover:text-slate-400 transition-colors duration-100 rounded-sm my-3\",\n        type: \"text\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 22\n        }, this) : \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \" text-sm text-slate-700 \",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \" underline hover:text-black\",\n          to: \"/login\",\n          children: \"Back To Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"5QIUamTpKWX5HFNLzxas5GAB+Lg=\", false, function () {\n  return [useForm, useSearchParams];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","Link","useSearchParams","api","useForm","Divider","InputField","toast","Buttons","jsxDEV","_jsxDEV","ResetPassword","_s","register","handleSubmit","reset","formState","errors","defaultValues","email","mode","loading","setLoading","searchParams","handleResetPassword","data","password","token","get","formData","URLSearchParams","append","post","headers","success","error","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","label","required","id","type","message","placeholder","min","disabled","onClickhandler","to","_c","$RefreshReg$"],"sources":["C:/Users/Fujitsu/Desktop/Notes-App/secure-notes-react/src/components/Auth/ResetPassword.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link, useSearchParams } from \"react-router-dom\";\r\nimport api from \"../../services/api\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Divider } from \"@mui/material\";\r\nimport InputField from \"../InputField/InputField\";\r\nimport toast from \"react-hot-toast\";\r\nimport Buttons from \"../../utils/Buttons\";\r\n\r\nconst ResetPassword = () => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm({\r\n    defaultValues: {\r\n      email: \"\",\r\n    },\r\n    mode: \"onTouched\",\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const handleResetPassword = async (data) => {\r\n    const { password } = data;\r\n\r\n    const token = searchParams.get(\"token\");\r\n\r\n    setLoading(true);\r\n    try {\r\n      const formData = new URLSearchParams();\r\n\r\n      formData.append(\"token\", token);\r\n      formData.append(\"newPassword\", password);\r\n      await api.post(\"/auth/public/reset-password\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        },\r\n      });\r\n      toast.success(\"Password reset successful! You can now log in.\");\r\n      reset();\r\n    } catch (error) {\r\n      toast.error(\"Error resetting password. Please try again.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-[calc(100vh-74px)] flex justify-center items-center\">\r\n      <form\r\n        onSubmit={handleSubmit(handleResetPassword)}\r\n        className=\"sm:w-[450px] w-[360px]  shadow-custom py-8 sm:px-8 px-4\"\r\n      >\r\n        <div>\r\n          <h1 className=\"font-montserrat text-center font-bold text-2xl\">\r\n            Update Your Password\r\n          </h1>\r\n          <p className=\"text-slate-600 text-center\">\r\n            Enter your new Password to Update it\r\n          </p>\r\n        </div>\r\n        <Divider className=\"font-semibold pb-4\"></Divider>\r\n\r\n        <div className=\"flex flex-col gap-2 mt-4\">\r\n          <InputField\r\n            label=\"Password\"\r\n            required\r\n            id=\"password\"\r\n            type=\"password\"\r\n            message=\"*Password is required\"\r\n            placeholder=\"enter your Password\"\r\n            register={register}\r\n            errors={errors}\r\n            min={6}\r\n          />{\" \"}\r\n        </div>\r\n        <Buttons\r\n          disabled={loading}\r\n          onClickhandler={() => {}}\r\n          className=\"bg-customRed font-semibold text-white w-full py-2 hover:text-slate-400 transition-colors duration-100 rounded-sm my-3\"\r\n          type=\"text\"\r\n        >\r\n          {loading ? <span>Loading...</span> : \"Submit\"}\r\n        </Buttons>\r\n        <p className=\" text-sm text-slate-700 \">\r\n          <Link className=\" underline hover:text-black\" to=\"/login\">\r\n            Back To Login\r\n          </Link>\r\n        </p>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}