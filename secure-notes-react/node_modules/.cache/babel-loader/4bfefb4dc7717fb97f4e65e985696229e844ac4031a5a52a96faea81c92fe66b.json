{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fujitsu\\\\Desktop\\\\Notes-App\\\\secure-notes-react\\\\src\\\\components\\\\Notes\\\\NoteDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport api from \"../../services/api\";\nimport \"react-quill/dist/quill.snow.css\";\nimport { Blocks } from \"react-loader-spinner\";\nimport ReactQuill from \"react-quill\";\nimport \"react-quill/dist/quill.snow.css\";\nimport moment from \"moment\";\nimport { DataGrid } from \"@mui/x-data-grid\";\nimport Buttons from \"../../utils/Buttons\";\nimport Errors from \"../Errors\";\nimport toast from \"react-hot-toast\";\nimport Modals from \"../PopModal\";\n//importing the the columns from the auditlogs\nimport { auditLogscolumn } from \"../../utils/tableColumn\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NoteDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  //open modal for deleteing a note\n  const [modalOpen, setModalOpen] = useState(false);\n  const [note, setNote] = useState(null);\n  const [editorContent, setEditorContent] = useState(note === null || note === void 0 ? void 0 : note.parsedContent);\n  const [auditLogs, setAuditLogs] = useState([]);\n  const [error, setError] = useState(null);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [noteEditLoader, setNoteEditLoader] = useState(false);\n  const [editEnable, setEditEnable] = useState(false);\n  const navigate = useNavigate();\n  const fetchNoteDetails = useCallback(async () => {\n    setLoading(true);\n    try {\n      const response = await api.get(\"/notes\");\n      const foundNote = response.data.find(n => n.id.toString() === id);\n      if (foundNote) {\n        foundNote.parsedContent = JSON.parse(foundNote.content).content; // Parse content\n        setNote(foundNote);\n      } else {\n        setError(\"Invalid Note\");\n      }\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message);\n      console.error(\"Error fetching note details\", err);\n    } finally {\n      setLoading(false);\n    }\n  }, [id]);\n  const checkAdminRole = async () => {\n    try {\n      const response = await api.get(\"/auth/user\"); // Adjust the endpoint as necessary to get user info\n      const roles = response.data.roles;\n      if (roles.includes(\"ROLE_ADMIN\")) {\n        setIsAdmin(true);\n      }\n    } catch (err) {\n      console.error(\"Error checking admin role\", err);\n      setError(\"Error checking admin role\", err);\n    }\n  };\n  const fetchAuditLogs = useCallback(async () => {\n    try {\n      const response = await api.get(`/audit/note/${id}`);\n      setAuditLogs(response.data);\n    } catch (err) {\n      console.error(\"Error fetching audit logs\", err);\n      setError(\"Error fetching audit logs\", err);\n    }\n  }, [id]);\n  useEffect(() => {\n    if (id) {\n      fetchNoteDetails();\n      checkAdminRole();\n      if (isAdmin) {\n        fetchAuditLogs();\n      }\n    }\n  }, [id, isAdmin, fetchAuditLogs, fetchNoteDetails]);\n  useEffect(() => {\n    if (note !== null && note !== void 0 && note.parsedContent) {\n      setEditorContent(note.parsedContent);\n    }\n  }, [note === null || note === void 0 ? void 0 : note.parsedContent]);\n  const rows = auditLogs.map(item => {\n    //moment npm package is used to format the date\n\n    const formattedDate = moment(item.timestamp).format(\"MMMM DD, YYYY, hh:mm A\");\n\n    //set the data for each rows in the table according to the field name in columns\n    //Example: username is the keyword in row it should matche with the field name in column so that the data will show on that column dynamically\n\n    return {\n      id: item.id,\n      noteId: item.noteId,\n      actions: item.action,\n      username: item.username,\n      timestamp: formattedDate,\n      noteid: item.noteId,\n      note: item.noteContent\n    };\n  });\n\n  //if there is an error\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Errors, {\n      message: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 12\n    }, this);\n  }\n  const handleChange = (content, delta, source, editor) => {\n    setEditorContent(content);\n  };\n\n  //edit the note content\n  const onNoteEditHandler = async () => {\n    if (editorContent.trim().length === 0) {\n      return toast.error(\"Note content Shouldn't be empty\");\n    }\n    try {\n      setNoteEditLoader(true);\n      const noteData = {\n        content: editorContent\n      };\n      await api.put(`/notes/${id}`, noteData);\n      toast.success(\"Note update successful\");\n      setEditEnable(false);\n      fetchNoteDetails();\n      checkAdminRole();\n      if (isAdmin) {\n        fetchAuditLogs();\n      }\n    } catch (err) {\n      toast.error(\"Update Note Failed\");\n    } finally {\n      setNoteEditLoader(false);\n    }\n  };\n\n  //navigate to the previous page\n  const onBackHandler = () => {\n    navigate(-1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \" min-h-[calc(100vh-74px)] md:px-10 md:py-8 sm:px-6 py-4 px-4\",\n    children: [/*#__PURE__*/_jsxDEV(Buttons, {\n      onClickhandler: onBackHandler,\n      className: \"bg-btnColor px-4 py-2 rounded-md text-white hover:text-slate-200 mb-3\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" py-6 px-8 min-h-customHeight shadow-lg shadow-gray-300 rounded-md\",\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n          children: !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end py-2 gap-2\",\n            children: [!editEnable ? /*#__PURE__*/_jsxDEV(Buttons, {\n              onClickhandler: () => setEditEnable(!editEnable),\n              className: \"bg-btnColor text-white px-3 py-1 rounded-md\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(Buttons, {\n              onClickhandler: () => setEditEnable(!editEnable),\n              className: \"bg-customRed text-white px-3 py-1 rounded-md\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 19\n            }, this), !editEnable && /*#__PURE__*/_jsxDEV(Buttons, {\n              onClickhandler: () => setModalOpen(true),\n              className: \"bg-customRed text-white px-3 py-1 rounded-md\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this)\n        }, void 0, false), loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex   flex-col justify-center items-center  h-96\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: /*#__PURE__*/_jsxDEV(Blocks, {\n                height: \"70\",\n                width: \"70\",\n                color: \"#4fa94d\",\n                ariaLabel: \"blocks-loading\",\n                wrapperStyle: {},\n                wrapperClass: \"blocks-wrapper\",\n                visible: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Please wait...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this)\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: editEnable ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"h-72 sm:mb-20  lg:mb-14 mb-28 \",\n              children: [/*#__PURE__*/_jsxDEV(ReactQuill, {\n                className: \"h-full \",\n                value: editorContent,\n                onChange: handleChange,\n                modules: {\n                  toolbar: [[{\n                    header: [1, 2, 3, 4, 5, 6]\n                  }], [{\n                    size: []\n                  }], [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"], [{\n                    list: \"ordered\"\n                  }, {\n                    list: \"bullet\"\n                  }, {\n                    indent: \"-1\"\n                  }, {\n                    indent: \"+1\"\n                  }], [\"clean\"] // Moved \"clean\" into its own array\n                  ]\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n                disabled: noteEditLoader,\n                onClickhandler: onNoteEditHandler,\n                className: \"bg-customRed  md:mt-16 mt-28 text-white px-4 py-2 hover:text-slate-300 rounded-sm\",\n                children: noteEditLoader ? /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"Loading...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 25\n                }, this) : \" Update Note\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 19\n            }, this)\n          }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \" text-slate-900 ql-editor\",\n              dangerouslySetInnerHTML: {\n                __html: note === null || note === void 0 ? void 0 : note.parsedContent\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 19\n            }, this), isAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-10\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                className: \"text-2xl text-center text-slate-700 font-semibold uppercase pt-10 pb-4\",\n                children: \"Audit Logs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"overflow-x-auto \",\n                children: /*#__PURE__*/_jsxDEV(DataGrid, {\n                  className: \"w-fit mx-auto \",\n                  rows: rows,\n                  columns: auditLogscolumn,\n                  initialState: {\n                    pagination: {\n                      paginationModel: {\n                        pageSize: 6\n                      }\n                    }\n                  },\n                  pageSizeOptions: [6],\n                  disableRowSelectionOnClick: true,\n                  disableColumnResize: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true)\n        }, void 0, false)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modals, {\n      open: modalOpen,\n      setOpen: setModalOpen,\n      noteId: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteDetails, \"CsaDr59kdUFOPgColdcmSkoGfxE=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = NoteDetails;\nexport default NoteDetails;\nvar _c;\n$RefreshReg$(_c, \"NoteDetails\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","useNavigate","useParams","api","Blocks","ReactQuill","moment","DataGrid","Buttons","Errors","toast","Modals","auditLogscolumn","jsxDEV","_jsxDEV","Fragment","_Fragment","NoteDetails","_s","id","modalOpen","setModalOpen","note","setNote","editorContent","setEditorContent","parsedContent","auditLogs","setAuditLogs","error","setError","isAdmin","setIsAdmin","loading","setLoading","noteEditLoader","setNoteEditLoader","editEnable","setEditEnable","navigate","fetchNoteDetails","response","get","foundNote","data","find","n","toString","JSON","parse","content","err","_err$response","_err$response$data","message","console","checkAdminRole","roles","includes","fetchAuditLogs","rows","map","item","formattedDate","timestamp","format","noteId","actions","action","username","noteid","noteContent","fileName","_jsxFileName","lineNumber","columnNumber","handleChange","delta","source","editor","onNoteEditHandler","trim","length","noteData","put","success","onBackHandler","className","children","onClickhandler","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","value","onChange","modules","toolbar","header","size","list","indent","disabled","dangerouslySetInnerHTML","__html","columns","initialState","pagination","paginationModel","pageSize","pageSizeOptions","disableRowSelectionOnClick","disableColumnResize","open","setOpen","_c","$RefreshReg$"],"sources":["C:/Users/Fujitsu/Desktop/Notes-App/secure-notes-react/src/components/Notes/NoteDetails.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport api from \"../../services/api\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport { Blocks } from \"react-loader-spinner\";\r\nimport ReactQuill from \"react-quill\";\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport moment from \"moment\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport Buttons from \"../../utils/Buttons\";\r\nimport Errors from \"../Errors\";\r\nimport toast from \"react-hot-toast\";\r\nimport Modals from \"../PopModal\";\r\n//importing the the columns from the auditlogs\r\nimport { auditLogscolumn } from \"../../utils/tableColumn\";\r\n\r\nconst NoteDetails = () => {\r\n  const { id } = useParams();\r\n  //open modal for deleteing a note\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  const [note, setNote] = useState(null);\r\n\r\n  const [editorContent, setEditorContent] = useState(note?.parsedContent);\r\n  const [auditLogs, setAuditLogs] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [noteEditLoader, setNoteEditLoader] = useState(false);\r\n  const [editEnable, setEditEnable] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const fetchNoteDetails = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await api.get(\"/notes\");\r\n      const foundNote = response.data.find((n) => n.id.toString() === id);\r\n      if (foundNote) {\r\n        foundNote.parsedContent = JSON.parse(foundNote.content).content; // Parse content\r\n        setNote(foundNote);\r\n      } else {\r\n        setError(\"Invalid Note\");\r\n      }\r\n    } catch (err) {\r\n      setError(err?.response?.data?.message);\r\n      console.error(\"Error fetching note details\", err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [id]);\r\n\r\n  const checkAdminRole = async () => {\r\n    try {\r\n      const response = await api.get(\"/auth/user\"); // Adjust the endpoint as necessary to get user info\r\n      const roles = response.data.roles;\r\n      if (roles.includes(\"ROLE_ADMIN\")) {\r\n        setIsAdmin(true);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error checking admin role\", err);\r\n      setError(\"Error checking admin role\", err);\r\n    }\r\n  };\r\n\r\n  const fetchAuditLogs = useCallback(async () => {\r\n    try {\r\n      const response = await api.get(`/audit/note/${id}`);\r\n      setAuditLogs(response.data);\r\n    } catch (err) {\r\n      console.error(\"Error fetching audit logs\", err);\r\n      setError(\"Error fetching audit logs\", err);\r\n    }\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      fetchNoteDetails();\r\n      checkAdminRole();\r\n      if (isAdmin) {\r\n        fetchAuditLogs();\r\n      }\r\n    }\r\n  }, [id, isAdmin, fetchAuditLogs, fetchNoteDetails]);\r\n\r\n  useEffect(() => {\r\n    if (note?.parsedContent) {\r\n      setEditorContent(note.parsedContent);\r\n    }\r\n  }, [note?.parsedContent]);\r\n\r\n  const rows = auditLogs.map((item) => {\r\n    //moment npm package is used to format the date\r\n\r\n    const formattedDate = moment(item.timestamp).format(\r\n      \"MMMM DD, YYYY, hh:mm A\"\r\n    );\r\n\r\n    //set the data for each rows in the table according to the field name in columns\r\n    //Example: username is the keyword in row it should matche with the field name in column so that the data will show on that column dynamically\r\n\r\n    return {\r\n      id: item.id,\r\n      noteId: item.noteId,\r\n      actions: item.action,\r\n      username: item.username,\r\n      timestamp: formattedDate,\r\n      noteid: item.noteId,\r\n      note: item.noteContent,\r\n    };\r\n  });\r\n\r\n  //if there is an error\r\n\r\n  if (error) {\r\n    return <Errors message={error} />;\r\n  }\r\n\r\n  const handleChange = (content, delta, source, editor) => {\r\n    setEditorContent(content);\r\n  };\r\n\r\n  //edit the note content\r\n  const onNoteEditHandler = async () => {\r\n    if (editorContent.trim().length === 0) {\r\n      return toast.error(\"Note content Shouldn't be empty\");\r\n    }\r\n\r\n    try {\r\n      setNoteEditLoader(true);\r\n      const noteData = { content: editorContent };\r\n      await api.put(`/notes/${id}`, noteData);\r\n      toast.success(\"Note update successful\");\r\n      setEditEnable(false);\r\n      fetchNoteDetails();\r\n      checkAdminRole();\r\n      if (isAdmin) {\r\n        fetchAuditLogs();\r\n      }\r\n    } catch (err) {\r\n      toast.error(\"Update Note Failed\");\r\n    } finally {\r\n      setNoteEditLoader(false);\r\n    }\r\n  };\r\n\r\n  //navigate to the previous page\r\n  const onBackHandler = () => {\r\n    navigate(-1);\r\n  };\r\n  return (\r\n    <div className=\" min-h-[calc(100vh-74px)] md:px-10 md:py-8 sm:px-6 py-4 px-4\">\r\n      <Buttons\r\n        onClickhandler={onBackHandler}\r\n        className=\"bg-btnColor px-4 py-2 rounded-md text-white hover:text-slate-200 mb-3\"\r\n      >\r\n        Go Back\r\n      </Buttons>\r\n      <div className=\" py-6 px-8 min-h-customHeight shadow-lg shadow-gray-300 rounded-md\">\r\n        <>\r\n          <>\r\n            {!loading && (\r\n              <div className=\"flex justify-end py-2 gap-2\">\r\n                {!editEnable ? (\r\n                  <Buttons\r\n                    onClickhandler={() => setEditEnable(!editEnable)}\r\n                    className=\"bg-btnColor text-white px-3 py-1 rounded-md\"\r\n                  >\r\n                    Edit\r\n                  </Buttons>\r\n                ) : (\r\n                  <Buttons\r\n                    onClickhandler={() => setEditEnable(!editEnable)}\r\n                    className=\"bg-customRed text-white px-3 py-1 rounded-md\"\r\n                  >\r\n                    Cancel\r\n                  </Buttons>\r\n                )}\r\n                {!editEnable && (\r\n                  <Buttons\r\n                    onClickhandler={() => setModalOpen(true)}\r\n                    className=\"bg-customRed text-white px-3 py-1 rounded-md\"\r\n                  >\r\n                    Delete\r\n                  </Buttons>\r\n                )}\r\n              </div>\r\n            )}\r\n          </>\r\n          {loading ? (\r\n            <>\r\n              <div className=\"flex   flex-col justify-center items-center  h-96\">\r\n                <span>\r\n                  <Blocks\r\n                    height=\"70\"\r\n                    width=\"70\"\r\n                    color=\"#4fa94d\"\r\n                    ariaLabel=\"blocks-loading\"\r\n                    wrapperStyle={{}}\r\n                    wrapperClass=\"blocks-wrapper\"\r\n                    visible={true}\r\n                  />\r\n                </span>\r\n                <span>Please wait...</span>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              {editEnable ? (\r\n                <>\r\n                  <div className=\"h-72 sm:mb-20  lg:mb-14 mb-28 \">\r\n                    <ReactQuill\r\n                      className=\"h-full \"\r\n                      value={editorContent}\r\n                      onChange={handleChange}\r\n                      modules={{\r\n                        toolbar: [\r\n                          [\r\n                            {\r\n                              header: [1, 2, 3, 4, 5, 6],\r\n                            },\r\n                          ],\r\n                          [{ size: [] }],\r\n                          [\r\n                            \"bold\",\r\n                            \"italic\",\r\n                            \"underline\",\r\n                            \"strike\",\r\n                            \"blockquote\",\r\n                          ],\r\n                          [\r\n                            { list: \"ordered\" },\r\n                            { list: \"bullet\" },\r\n                            { indent: \"-1\" },\r\n                            { indent: \"+1\" },\r\n                          ],\r\n                          [\"clean\"], // Moved \"clean\" into its own array\r\n                        ],\r\n                      }}\r\n                    />\r\n\r\n                    <Buttons\r\n                      disabled={noteEditLoader}\r\n                      onClickhandler={onNoteEditHandler}\r\n                      className=\"bg-customRed  md:mt-16 mt-28 text-white px-4 py-2 hover:text-slate-300 rounded-sm\"\r\n                    >\r\n                      {noteEditLoader ? (\r\n                        <span>Loading...</span>\r\n                      ) : (\r\n                        \" Update Note\"\r\n                      )}\r\n                    </Buttons>\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <p\r\n                    className=\" text-slate-900 ql-editor\"\r\n                    dangerouslySetInnerHTML={{ __html: note?.parsedContent }}\r\n                  ></p>\r\n\r\n                  {isAdmin && (\r\n                    <div className=\"mt-10\">\r\n                      <h1 className=\"text-2xl text-center text-slate-700 font-semibold uppercase pt-10 pb-4\">\r\n                        Audit Logs\r\n                      </h1>\r\n\r\n                      <div className=\"overflow-x-auto \">\r\n                        <DataGrid\r\n                          className=\"w-fit mx-auto \"\r\n                          rows={rows}\r\n                          columns={auditLogscolumn}\r\n                          initialState={{\r\n                            pagination: {\r\n                              paginationModel: {\r\n                                pageSize: 6,\r\n                              },\r\n                            },\r\n                          }}\r\n                          pageSizeOptions={[6]}\r\n                          disableRowSelectionOnClick\r\n                          disableColumnResize\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </>\r\n              )}\r\n            </>\r\n          )}\r\n        </>\r\n      </div>\r\n      <Modals open={modalOpen} setOpen={setModalOpen} noteId={id} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteDetails;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}